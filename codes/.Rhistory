nf <- layout( matrix(c(1,2), ncol=2) )
par(pty="s")
plot(dummydat2$y~dummydat2$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=12,ny=12,lty=1,lwd=1,col=1)
title("2 X 2")
par(pty="s")
plot(dummydat3$y~dummydat3$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=6,ny=6,lty=1,lwd=1,col=1)
title("4 X 4")
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,150))%>%
mutate(x=x,
y=y)
par(pty="s")
plot(dummydat$y~dummydat$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=24,ny=24,lty=1,lwd=1,col=1)
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,3), ncol=3) )
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,3), ncol=3) )
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,3)) )
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,2), ncol=2) )
par(pty="s")
plot(dummydat$y~dummydat$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=24,ny=24,lty=1,lwd=1,col=1)
title("1 X 1")
par(pty="s")
plot(dummydat2$y~dummydat2$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=12,ny=12,lty=1,lwd=1,col=1)
title("2 X 2")
par(pty="s")
plot(dummydat3$y~dummydat3$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=6,ny=6,lty=1,lwd=1,col=1)
title("4 X 4")
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,2), ncol=3) )
par(pty="s")
plot(dummydat$y~dummydat$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=24,ny=24,lty=1,lwd=1,col=1)
title("1 X 1")
par(pty="s")
plot(dummydat2$y~dummydat2$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=12,ny=12,lty=1,lwd=1,col=1)
title("2 X 2")
par(pty="s")
plot(dummydat3$y~dummydat3$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=6,ny=6,lty=1,lwd=1,col=1)
title("4 X 4")
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,3), ncol=3) )
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,150))%>%
mutate(x=x,
y=y)
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,3), ncol=3) )
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,150))%>%
mutate(x=x,
y=y)
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(3,1), nrow=3) )
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,150))%>%
mutate(x=x,
y=y)
dummydat2=dummydat%>%
mutate(x=floor(x/2),
y=floor(y/2))
dummydat3=dummydat%>%
mutate(x=floor(x/4),
y=floor(y/4))
nf <- layout( matrix(c(1,2,3), ncol=3) )
par(pty="s")
plot(dummydat$y~dummydat$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=24,ny=24,lty=1,lwd=1,col=1)
title("1 X 1")
par(pty="s")
plot(dummydat2$y~dummydat2$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=12,ny=12,lty=1,lwd=1,col=1)
title("2 X 2")
par(pty="s")
plot(dummydat3$y~dummydat3$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=6,ny=6,lty=1,lwd=1,col=1)
title("4 X 4")
?heatmap
as.matrix(mtcars)
dat=dummydat
dat
options(dplyr.summarise.inform = FALSE)
Lx=24
Ly=24
gr=2
coords=expand.grid(x=1:Lx,y=1:Ly)
dat%>%
as_tibble()%>%
select(x,y,pres)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
dat%>%
as_tibble()%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
dat
coords=expand.grid(x=1:Lx,y=1:Ly)
coords%>%as_tibble
dat
dat%>%
as_tibble()%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))
dat%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
dat%>%
mutate(pres=1)
dat
dat%>%right_join(coords)
dat%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
dat=dat%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
dat
sum(dat$pres)
result=NULL
i=2
cutx=unique(c(seq(0, Lx, i),Lx))
cuty=unique(c(seq(0, Ly, i),Ly))
dat1=dat%>%
mutate(x = cut(x, cutx, labels = FALSE,include.lowest=TRUE),
y = cut(y, cuty, labels = FALSE,include.lowest=TRUE))%>%
group_by(x,y)%>%
summarize(pres=(sum(pres)))%>%
ungroup()%>%
pivot_wider(names_from = x,values_from = pres)%>%
select(-y)%>%
as.matrix()
dat1
dat%>%
mutate(x = cut(x, cutx, labels = FALSE,include.lowest=TRUE),
y = cut(y, cuty, labels = FALSE,include.lowest=TRUE))%>%
group_by(x,y)%>%
summarize(pres=sign(sum(pres)))%>%
ungroup()%>%
pivot_wider(names_from = x,values_from = pres)%>%
select(-y)%>%
as.matrix()
clust=matrix(0,nrow=nrow(dat1),ncol=ncol(dat1))
largest=0
lbl=0:length(clust)
for(y in seq(ncol(dat1))){
for(x in seq(nrow(dat1))){
if((dat1[x,y]>0)){
left=ifelse(length(clust[x,y-1])==0,0,clust[x,y-1])
above=ifelse(length(clust[x-1,y])==0,0,clust[x-1,y])
if((left==0) & (above==0)){
largest=largest+1
clust[x,y]=largest
lbl[(nrow(clust)*(y-1))+x]=largest
}else{
if((left!=0) & (above==0)){
clust[x,y]=clust[x,y-1]
lbl[(nrow(clust)*(y-1))+x]=lbl[(nrow(clust)*(y-2))+x]
}else{
if(left==0 & above!=0){
clust[x,y]=clust[x-1,y]
lbl[(nrow(clust)*(y-1))+x]=lbl[(nrow(clust)*(y-1))+x-1]
}else{
newlab=min(left,above)
lbl[which(lbl==left | lbl==above)]=newlab
clust[x,y]=newlab
clust[which(clust==max(left,above))]=newlab
}
}
}
}
}
}
clust
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,100))%>%
mutate(x=x,
y=y)
dummydat=expand.grid(x=1:24,y=1:24)%>%
as_tibble()%>%
slice(sample(1:24^2,100))%>%
mutate(x=x,
y=y)
par(pty="s")
plot(dummydat$y~dummydat$x,pch=16,ylab = "",xlab="", xaxt='n',yaxt='n')
grid(nx=24,ny=24,lty=1,lwd=1,col=1)
dat=dummydat
options(dplyr.summarise.inform = FALSE)
coords=expand.grid(x=1:Lx,y=1:Ly)
dat=dat%>%
mutate(pres=1)%>%
right_join(coords,by=c('x','y'))%>%
replace_na(list(pres=0))
result=NULL
i=2
cutx=unique(c(seq(0, Lx, i),Lx))
cuty=unique(c(seq(0, Ly, i),Ly))
dat1=dat%>%
mutate(x = cut(x, cutx, labels = FALSE,include.lowest=TRUE),
y = cut(y, cuty, labels = FALSE,include.lowest=TRUE))%>%
group_by(x,y)%>%
summarize(pres=(sum(pres)))%>%
ungroup()%>%
pivot_wider(names_from = x,values_from = pres)%>%
select(-y)%>%
as.matrix()
clust=matrix(0,nrow=nrow(dat1),ncol=ncol(dat1))
largest=0
lbl=0:length(clust)
for(y in seq(ncol(dat1))){
for(x in seq(nrow(dat1))){
if((dat1[x,y]>0)){
left=ifelse(length(clust[x,y-1])==0,0,clust[x,y-1])
above=ifelse(length(clust[x-1,y])==0,0,clust[x-1,y])
if((left==0) & (above==0)){
largest=largest+1
clust[x,y]=largest
lbl[(nrow(clust)*(y-1))+x]=largest
}else{
if((left!=0) & (above==0)){
clust[x,y]=clust[x,y-1]
lbl[(nrow(clust)*(y-1))+x]=lbl[(nrow(clust)*(y-2))+x]
}else{
if(left==0 & above!=0){
clust[x,y]=clust[x-1,y]
lbl[(nrow(clust)*(y-1))+x]=lbl[(nrow(clust)*(y-1))+x-1]
}else{
newlab=min(left,above)
lbl[which(lbl==left | lbl==above)]=newlab
clust[x,y]=newlab
clust[which(clust==max(left,above))]=newlab
}
}
}
}
}
}
clust
dat1%>%
as_tibble()%>%
mutate(y=1:nrow(dat1))%>%
pivot_longer("1":as.character(ncol(dat1)),names_to="x",values_to = "pres")
dat2=dat1%>%
as_tibble()%>%
mutate(y=1:nrow(dat1))%>%
pivot_longer("1":as.character(ncol(dat1)),names_to="x",values_to = "pres")
dat2
colnames(clust)=1:ncol(clust)
clust2=clust%>%
as_tibble()%>%
mutate(y=1:nrow(clust))%>%
pivot_longer("1":as.character(ncol(clust)),names_to="x",values_to = "cluster")
clust2
clustab=dat2%>%
inner_join(clust2,by=c("x","y"))%>%
filter(pres!=0)%>%
select(pres,cluster)%>%
group_by(cluster)%>%
summarize(freq=sum(pres))%>%
ungroup()%>%
count(freq)
clustab
heatmap(clust)
clust2
clust2%>%ggplot(aes(x,y,col=cluster,fill=cluster))+geom_tile()
clust2%>%mutate(cluster=as.factor(cluster))%>%ggplot(aes(x,y,col=cluster,fill=cluster))+geom_tile()
clust2%>%mutate(cluster=as.factor(cluster))%>%filter(cluster>0)%>%ggplot(aes(x,y,col=cluster,fill=cluster))+geom_tile()
clust2%>%filter(cluster>0)%>%mutate(cluster=as.factor(cluster))%>%ggplot(aes(x,y,col=cluster,fill=cluster))+geom_tile()
clust
clust2
dist=Inf
dist
dist>1
min(10,dist)
?dist
df = as.data.frame(cbind(c(.59, .72, 1.31, 4.32),
c(.78, .91, 1.21, 1.52),
c(.91, .73, .9, 3.2),
c(1,2,3,2)), stringsAsFactors = FALSE)
names(df) = c("V1", "V2", "V3", "group")
df
combinations = combn(x = unique(df$group), m = 2)
combinations
clust2
dat=clust2
numclus=tibble(clus=unique(dat$cluster),id=1:length(unique(dat$cluster)))
numclus
dat=clust2%>%filter(cluster >0)
dat
tibble(clus=unique(dat$cluster),id=1:length(unique(dat$cluster)))
numclus=tibble(clus=unique(dat$cluster),id=1:length(unique(dat$cluster)))
i1=1
i2=2
cl1=dat%>%
filter(cluster==numclus$clus[i1])%>%
select(x,y)%>%
as.data.frame()
cl2=dat%>%
filter(cluster==numclus$clus[i2])%>%
select(x,y)%>%
as.data.frame()
cl1
cl2
combs=expand.grid(1:nrow(cl1),1:nrow(cl2))
combs
lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x],1]-cl2[combs[x],1])^2 + (cl1[combs[x],2]-cl2[combs[x],2])^2))
vapply(1:nrow(combs), function(x) sqrt((cl1[combs[x],1]-cl2[combs[x],1])^2 + (cl1[combs[x],2]-cl2[combs[x],2])^2))
sapply(1:nrow(combs), function(x) sqrt((cl1[combs[x],1]-cl2[combs[x],1])^2 + (cl1[combs[x],2]-cl2[combs[x],2])^2))
lapply(1:10, sqrt
lapply(1:10, sqrt)
cl1[combs[1], 1]
cl1
cl1[1,1]
is.data.frame(cl1)
cl1=dat%>%
filter(cluster==numclus$clus[i1])%>%
select(x,y)%>%
as.matrix()
cl1
dat
dat=dat%>%as.data.frame()
dat
dat[1,1]
dat
cl1=dat%>%
filter(cluster==numclus$clus[i1])%>%
select(x,y)%>%
as.matrix()
cl1
cl1=dat%>%
filter(cluster==numclus$clus[i1])%>%
select(x,y)
cl1
cl1[1,1]
dat[which(dat$cluster==numclus$clus[i1]),(1:2)]
cl1=dat[which(dat$cluster==numclus$clus[i1]),(1:2)]
cl2=dat[which(dat$cluster==numclus$clus[i2]),(1:2)]
cl2
cl1
lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x],1]-cl2[combs[x],1])^2 + (cl1[combs[x],2]-cl2[combs[x],2])^2))
cl1[combs[1],1]
combs[1]
cl1[1,1]
combs
combs[1,]
combs[1,1]
lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x,1],1]-cl2[combs[x,2],1])^2 + (cl1[combs[x,1],2]-cl2[combs[x,2],2])^2))
x=1
(cl1[combs[x,1],1]-cl2[combs[x,2],1])^2
cl1[combs[x,1],1]
cl2[combs[x,2],1]
(cl1[combs[x,1],2]-cl2[combs[x,2],2])^2
cl1[combs[x,1],2]
cl1
combs[x,1]
cl1[1,2]
cl1
cl1[1.1]
cl1[1,1]
cl1[1,2]
typeof(dat$y)
typeof(dat$x)
clust2
typeof(clust2$y)
typeof(clust2$x)
clust2=clust%>%
as_tibble()%>%
mutate(y=1:nrow(clust))%>%
mutate(x=as.numeric(X))%>%
pivot_longer("1":as.character(ncol(clust)),names_to="x",values_to =    "cluster")%>%
filter(cluster > 0)
clust2=clust%>%
as_tibble()%>%
mutate(y=1:nrow(clust))%>%
mutate(x=as.numeric(x))%>%
pivot_longer("1":as.character(ncol(clust)),names_to="x",values_to =    "cluster")%>%
filter(cluster > 0)
clust2
clust
clust%>%
as_tibble()%>%
mutate(y=1:nrow(clust))
clust2=clust%>%
as_tibble()%>%
mutate(y=1:nrow(clust))%>%
pivot_longer("1":as.character(ncol(clust)),names_to="x",values_to =    "cluster")%>%
mutate(x=as.numeric(x))%>%
filter(cluster > 0)
clust2
dat=clust2
dat=clust2%>%as.data.frame()
cl1=dat[which(dat$cluster==numclus$clus[i1]),(1:2)]
cl2=dat[which(dat$cluster==numclus$clus[i2]),(1:2)]
lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x,1],1]-cl2[combs[x,2],1])^2 + (cl1[combs[x,1],2]-cl2[combs[x,2],2])^2))
cl1
cl2
unlist(lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x,1],1]-cl2[combs[x,2],1])^2 + (cl1[combs[x,1],2]-cl2[combs[x,2],2])^2)))
a=list(length=5)
a
a[1]
a[[1]]
list(1,c(2,3,4))
get_distmap=function(clustmap){
grs=unique(clustmap$gr)
res=list(length=length(grs))
for(i in grs){
dat=clustmap%>%
filter(gr==i && cluster > 0)%>%
as.data.frame()
numclus=tibble(clus=unique(dat$cluster),id=1:length(unique(dat$cluster)))
distmat=matrix(0,nrow=length(unique(dat$cluster)),ncol=length(unique(dat$cluster)))
for(i1 in 1:(length(numclus$id)-1)){
for(i2 in (i+1):length(numclus$id)){
cl1=dat[which(dat$cluster==numclus$clus[i1]),(1:2)]
cl2=dat[which(dat$cluster==numclus$clus[i2]),(1:2)]
dist=min(unlist(lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x,1],1]-cl2[combs[x,2],1])^2 + (cl1[combs[x,1],2]-cl2[combs[x,2],2])^2))))
distmat[i1,i2]=dist
}
}
res[[i]]=list(gr=i,mat=distmat)
}
return(res)
}
da
dat
dat%>%as_tibble()
clust2
clust2%>%count(cluster)
clust2%>%count(cluster)%>%summarize(sum=sum(n))
dat%>%count(cluster)
dat%>%count(cluster)%>%count(N)
dat%>%count(cluster)%>%count(n)
get_clusdat=function(clustmap){
grs=unique(clustmap$gr)
res=list(length=length(grs))
for(i in grs){
dat=clustmap%>%
filter(gr==i && cluster > 0)%>%
as.data.frame()
clusfreq=dat%>%count(cluster)%>%count(n)
numclus=tibble(clus=unique(dat$cluster),id=1:length(unique(dat$cluster)))
distmat=matrix(0,nrow=length(unique(dat$cluster)),ncol=length(unique(dat$cluster)))
for(i1 in 1:(length(numclus$id)-1)){
for(i2 in (i+1):length(numclus$id)){
cl1=dat[which(dat$cluster==numclus$clus[i1]),(1:2)]
cl2=dat[which(dat$cluster==numclus$clus[i2]),(1:2)]
dist=min(unlist(lapply(1:nrow(combs), function(x) sqrt((cl1[combs[x,1],1]-cl2[combs[x,2],1])^2 + (cl1[combs[x,1],2]-cl2[combs[x,2],2])^2))))
distmat[i1,i2]=dist
}
}
res[[i]]=list(gr=i,freq=clusfreq,mat=distmat)
}
return(res)
}
